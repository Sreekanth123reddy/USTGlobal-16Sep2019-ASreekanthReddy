package com.ust.retailermaintenancesystem.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.TypedQuery;

import org.springframework.stereotype.Repository;

import com.ust.retailermaintenancesystem.dto.OrderProduct;
import com.ust.retailermaintenancesystem.dto.ProductBean;
import com.ust.retailermaintenancesystem.dto.RetailerBean;
@Repository
public class RetailerDaoImpl implements RetailerDAO {
	@PersistenceUnit
	private EntityManagerFactory factory ;
	@Override
	public RetailerBean login(int id, String password) {
		String jpql = "from RetailerBean  where id=:id and password=:pass";
		EntityManager manager = factory.createEntityManager();
		TypedQuery<RetailerBean> query = manager.createQuery(jpql, RetailerBean.class);
		query.setParameter("id", id);
		query.setParameter("pass", password);
		
		try {
		RetailerBean bean =  query.getSingleResult();
		return bean;
		}catch (Exception e) {
			e.printStackTrace();
			return null;
		}
		

	}

	@Override
	public int register(RetailerBean bean) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		try {
		manager.persist(bean);
		transaction.commit();
		return bean.getId();
		}
		catch(Exception e){
			e.printStackTrace();
			return -1;
		}

	}

	@Override
	public ProductBean searchProduct(int id) {
		EntityManager manager=factory.createEntityManager();
		try {
			ProductBean product=manager.find(ProductBean.class, pname);
			return product;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}}

	@Override
	public boolean updatePassword(int id, String password) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		transaction.begin();
		RetailerBean bean = manager.find(RetailerBean.class, id);
		bean.setPassword(password);
		transaction.commit();
		return true;
	}


	@Override
	public List<OrderProduct> getProducts(String email) {
		EntityManager manager=factory.createEntityManager();
		EntityTransaction transaction=manager.getTransaction();
		try {
			String jpql="from OrderProduct where email=:email";
			TypedQuery<OrderProduct> tquery=manager.createQuery(jpql,OrderProduct.class);
			tquery.setParameter("email", email);
			List<OrderProduct> list=tquery.getResultList();
			return list;
		}catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	@Override
	public boolean buyProduct(OrderProduct orderProduct) {
		EntityManager manager=factory.createEntityManager();
		EntityTransaction transaction=manager.getTransaction();
		transaction.begin();
		try {
			manager.persist(orderProduct);
			transaction.commit();
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			transaction.rollback();
			return false;
		}
	}

	


}
