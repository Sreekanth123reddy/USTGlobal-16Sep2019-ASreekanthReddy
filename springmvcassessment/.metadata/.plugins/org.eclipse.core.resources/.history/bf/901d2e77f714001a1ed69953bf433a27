package com.ust.retailermaintenancesystem.controller;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.SessionAttribute;

import com.ust.retailermaintenancesystem.dto.OrderProduct;
import com.ust.retailermaintenancesystem.dto.Product;
import com.ust.retailermaintenancesystem.dto.RetailerBean;
import com.ust.retailermaintenancesystem.service.RetailerService;

@Controller
public class RetailerController {
	@Autowired
	private RetailerService service ;

	@GetMapping("/login")
	public String loginPage() {

		return "login";
	} 

	@PostMapping("/login")
	public String login(int id, String password, HttpServletRequest request) {
		RetailerBean bean = service.login(id, password);
		if(bean==null) {
			request.setAttribute("msg", "Invalid Crediantials");
			return "login";
		}else {
			HttpSession session = request.getSession();
			session.setAttribute("bean", bean);
			return "home";
		}
	}

	@GetMapping("/register")
	public String registerPage() {
		return "register";
	} 

	@PostMapping("/register")
	public String register(RetailerBean bean ,ModelMap map) {
		int check = service.register(bean);
		if(check>0) {
			map.addAttribute("msg","You are Registered and Id is "+check);
		}else {
			map.addAttribute("msg", "email is repeated");
		}
		return "login";
	}

	@GetMapping("/home")
	public String home(ModelMap map ,@SessionAttribute(name="bean" , required = false) RetailerBean bean) {
		if(bean==null)
		{
			map.addAttribute("msg", "Login First!!!!");
			return "login";
		}else {
			return "home";
		}
	}//end of home

	@PostMapping("/home")
	public String home() {
		return "home";
	} 
	
	@GetMapping("/changepassword")
	public String changePassword(HttpServletRequest request) {
		HttpSession session = request.getSession(false);
		if(session!=null) {
			return "changepassword";	
		}else {
			return "login";
		}
		
	}//end of changePassword()
	@PostMapping("/changepassword")
	public String changePassword(String password,String confirmpassword,
			@SessionAttribute(name="bean") RetailerBean bean ,ModelMap map) {
		if(password.equals(confirmpassword)) {
			service.updatePassword(bean.getId(), password);
			map.addAttribute("msg", "Password is changed");
		}else {
			map.addAttribute("msg", "Password is not matching");
		}
		return "home";
	}
	@GetMapping("/search")
	public String search() {
		
		return "searchproduct";
	}
	@PostMapping("/search")
	public String searchproduct(@SessionAttribute(name= "user", required = false) RetailerBean user,ModelMap map,int id) {
		if(user!=null) {
			
			Product product=service.searchProduct(id);
			if(product!=null) {
			map.addAttribute("product",product);
			return "searchproduct";
			}else {
				map.addAttribute("msg", "product not found");
				return "searchproduct";
			}
		}else {
			map.addAttribute("msg", "First Login!!!");
		return "login";
		}
	}
	@GetMapping("/buy")
	public String buy(@SessionAttribute(name= "user", required = false) RetailerBean user,ModelMap map,Product product) {
		if(user!=null) {
			map.addAttribute("buy", product);
			return "buyproduct";
		}else {
			map.addAttribute("msg", "First Login");
			return "login";
		}
	}
	@PostMapping("/buy")
	public String buyproduct(@SessionAttribute(name= "user", required = false) RetailerBean user,ModelMap map,Product product, int quantity) {
		if(user!=null) {
			service.buyProduct(user, product, quantity);
			map.addAttribute("msg", "product added");
			return "home";
		}else {
			map.addAttribute("msg", "First Login");
			return "login";
		}
	}
	@GetMapping("/order")
	public String order(@SessionAttribute(name= "user", required = false) RetailerBean user,ModelMap map) {
		if(user!=null) {
			List<OrderProduct> list=service.getProducts(user.getEmail());
			if(list.isEmpty()) {
				map.addAttribute("msg", "No Product You Have");
				return "home";
			}else {
				map.addAttribute("orders", list);
				return "orders";
			}
		}else {
			map.addAttribute("msg", "First Login");
			return "login";
		}
	
	}

	@GetMapping("/logout")
	public String logout(HttpSession session) {
		session.invalidate();
		return "login";
	} //end of logout
}
